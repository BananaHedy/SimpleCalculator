18日
OK创建工程
OK引入注解框架
OK创建仓库，放上github
OK设置主题
19日
设计布局 简单设计按钮样式--两个button-selector,3个
设计自定义控件
20日
理清需求
抽象设计
	{Activity{onResult,onControlClick,onInputClick},
	Controller{List<ArrayList<InputItem> memory,smallScreen,bigScreen,numberStack<bigDecimal>,operatorStack<Operator>,map<name,Checker>map<name,Operator> ,Operator getOeprator(name),callBack(str,str)},
	MiButton{onCLick{performOnRespond(this)}},
	IRespondser,
	SimpleNumberRespondser
	RespondserFactory(Controller),
	Respondser{(,,),void onRespond(memory,state)}
	IOperator{},
	Operator{onOperate(,)throws,(afterOpeate)},
	Core,运算核心
	OperatorPriority,优先级
	Symbol{}，
	InputItem{},
	OperatorFactory(Controller){map<name,classname>init(),Operator createOepator(name)},
	.propties 别名映射类名
	layout，传入别名
	.xml}

编码	
	OK改一下id
	OK自定义属性
	OK配置文件
	OK减法除法
	动态保留小数点
	支持负数
	左右括号
		触发
		逻辑
	字体大小
	动画
	连续运算





操作符优先级规则：
（1）若不高于栈顶符号优先级，则栈顶先出栈，继续比较后续栈顶符号，直至遇到低于自己的符号，则自己入栈；
（2）高于栈顶符号优先级，直接入栈
（3）左括号“（”直接入栈
（4）右括号“）”不入栈，依次弹出栈内操作符，直至遇到“（”
（5）在开始和结束配合使用“#”，终结运算的标志

1.遇到操作数：直接输出（添加到后缀表达式中）
2.栈为空时，遇到运算符，直接入栈
3.遇到左括号：将其入栈
4.遇到右括号：执行出栈操作，并将出栈的元素输出，直到弹出栈的是左括号，左括号不输出。
5.遇到其他运算符：加减乘除：弹出所有优先级大于或者等于该运算符的栈顶元素，然后将该运算符入栈
6.最终将栈中的元素依次出栈，输出。